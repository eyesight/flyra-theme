{"version":3,"sources":["1_settings/_fonts.scss","4_basics/_basics.scss","3_mixins/_type-face.scss","3_mixins/_typography.scss","style-editor.css","3_mixins/_layout.scss","3_mixins/_breakpoints.scss","3_mixins/_grid.scss","3_mixins/_flexbox.scss","3_mixins/_grid-offsets.scss","4_basics/_animations.scss","4_basics/_helper-classes.scss","4_basics/_responsive-embed.scss","3_mixins/_responsive-ratio.scss","6_gutenberg/editor-only/_reset.scss","6_gutenberg/editor-only/_general-styling.scss"],"names":[],"mappings":"AAWA,WACE,YAAA,SACA,IAAA,+BAAA,mBACA,YAAA,IACA,WAAA,OAGF,WACE,YAAA,SACA,IAAA,+BAAA,mBACA,YAAA,IACA,WAAA,OAGF,WACE,YAAA,eACA,IAAA,yCAAA,mBC3BF,KACE,UAAA,MACA,MAAA,KAGF,KCAE,YAAA,QAAA,CAAA,WACA,YAAA,IACA,WAAA,OACA,eAAA,YACA,eAAA,UCwBE,UAAA,OAEE,YAAA,OF3BJ,MAAA,KACA,iBAAA,QACA,WAAA,OACA,YAAA,KEQI,oCFdN,KE4BI,UAAA,KAEE,YAAA,QFrBN,EAAA,OAAA,QACE,WAAA,WAGF,GG6LA,GACA,GF3ME,YAAA,QAAA,CAAA,WACA,YAAA,IACA,WAAA,OACA,eAAA,YACA,eAAA,UDeF,GESI,UAAA,KAEE,YAAA,IAhBA,oCFKN,GESI,UAAA,KAEE,YAAA,KFPN,GEKI,UAAA,KAEE,YAAA,OAhBA,oCFSN,GEKI,UAAA,KAEE,YAAA,QFHN,GECI,UAAA,OAEE,YAAA,KAhBA,oCFaN,GECI,UAAA,OAEE,YAAA,MFCN,IACE,UAAA,KACA,OAAA,KACA,QAAA,MAHF,SAMI,QAAA,EACA,WAAA,OACA,WAAA,QAAA,IAAA,KARJ,WAYI,QAAA,EACA,WAAA,QAIJ,EACE,gBAAA,UACA,OAAA,QACA,MAAA,KAHF,QAAA,QAOI,MAAA,KACA,gBAAA,KAIJ,GACE,WAAA,KAGF,oBACE,OAAA,EACA,KAAA,sBACA,kBAAA,WAAA,UAAA,WACA,OAAA,IACA,OAAA,KACA,SAAA,OACA,QAAA,EACA,SAAA,SACA,MAAA,IACA,UAAA,iBAIF,iBAEI,QAAA,EACA,WAAA,KAGJ,OACE,OAAA,KACA,WAAA,IAEF,aACE,QAAA,EAIF,SIjGE,MAAA,kBACA,YAAA,KACA,aAAA,KCsME,yBLvGJ,SI5FI,MAAA,kBACA,UAAA,QJ+FJ,gBMpFE,YAAA,OACA,aAAA,OCdA,QAAA,KACA,eAAA,IACA,UAAA,KACA,gBAAA,WACA,YAAA,WPiGF,uBQlEE,YAAA,OACA,aAAA,OACA,KAAA,EAAA,EAAA,KDrCA,QAAA,KACA,eAAA,IACA,UAAA,KACA,gBAAA,WACA,YAAA,WCoCA,aR6DF,uBQ5DI,YAAA,EACA,aAAA,EACA,QAAA,OR8DJ,WMxGE,MAAA,IACA,cAAA,EACA,cAAA,MACA,aAAA,MACA,WAAA,WD4ME,4BLxGJ,WMxGE,MAAA,KACA,cAAA,KACA,cAAA,MACA,aAAA,MACA,WAAA,YN4GF,aACE,QAAA,KK+FE,4BLhGJ,aAGI,QAAA,OSzHJ,kCACI,GACE,UAAA,cACA,IAAA,IAEF,IACE,IAAA,IACA,UAAA,UAEF,KACE,IAAA,EACA,UAAA,WAXN,0BACI,GACE,UAAA,cACA,IAAA,IAEF,IACE,IAAA,IACA,UAAA,UAEF,KACE,IAAA,EACA,UAAA,WAIJ,0BACE,GACE,QAAA,EAEF,KACE,QAAA,GALJ,kBACE,GACE,QAAA,EAEF,KACE,QAAA,GAIJ,kCACE,GACE,QAAA,EAEF,IACE,QAAA,EAEF,KACE,QAAA,GARJ,0BACE,GACE,QAAA,EAEF,IACE,QAAA,EAEF,KACE,QAAA,GAIJ,0BACE,GACE,OAAA,EACA,UAAA,UAEF,IACE,OAAA,IACA,UAAA,UAEF,KACE,UAAA,eACA,iBAAA,OAAA,OACA,OAAA,KAZJ,kBACE,GACE,OAAA,EACA,UAAA,UAEF,IACE,OAAA,IACA,UAAA,UAEF,KACE,UAAA,eACA,iBAAA,OAAA,OACA,OAAA,KAIJ,kCACE,GACE,UAAA,eACA,OAAA,IAEF,IACE,OAAA,IACA,UAAA,UAEF,KACE,OAAA,EACA,UAAA,WAXJ,0BACE,GACE,UAAA,eACA,OAAA,IAEF,IACE,OAAA,IACA,UAAA,UAEF,KACE,OAAA,EACA,UAAA,WAIJ,0BACE,GACE,IAAA,EACA,UAAA,UAEF,IACE,IAAA,gBACA,UAAA,UAEF,KACE,UAAA,cACA,IAAA,iBAXJ,kBACE,GACE,IAAA,EACA,UAAA,UAEF,IACE,IAAA,gBACA,UAAA,UAEF,KACE,UAAA,cACA,IAAA,iBC9EN,QACE,QAAA,eCDF,kBCKE,SAAA,SACA,MAAA,KACA,OAAA,EACA,QAAA,OAAA,EAAA,EAAA,EACA,QAAA,MAGE,yBACE,SAAA,SACA,IAAA,EACA,KAAA,EACA,MAAA,EACA,OAAA,EACA,MAAA,KACA,OAAA,KCnBN,qBACE,MAAA,KAGF,iCACE,QAAA,EAGF,UACE,MAAA,KACA,UAAA,OACA,YAAA,KACA,aAAA,KACA,aAAA,EACA,cAAA,EANF,2BASI,UAAA,sBACA,QAAA,EAAA,KAVJ,2BAAA,oCAAA,iDAgBI,UAAA,KACA,YAAA,YACA,aAAA,YAIJ,kFACE,YAAA,EACA,aAAA,EAFF,uHAKI,YAAA,EACA,aAAA,EVodJ,uEUhdA,qEAEE,aAAA,YACA,YAAA,YAGF,6BACE,MAAA,KVidF,gBWhgBA,mBXkgBA,eADA,SW7fE,WAAA,IACA,OAAA,KACA,mBAAA,KACA,OAAA,QXkgBF,6BW9fE,6BAEE,QAAA,KACA,UAAA,cACA,QAAA,EAKF,gCACE,QAAA,KACA,UAAA,cACA,QAAA,EAIJ,kBAEI,QAAA,eAIJ,gBACE,WAAA,OADF,oBAII,QAAA,aAIJ,2BACE,QAAA","file":"style-editor.css","sourcesContent":["// FONT-FACE SETTINGS HERE\n/* @font-face {\n  font-family:\"Circular Std\";\n  src: url(\"#{$font-path}lineto-circular-medium.eot\");\n  src: url(\"#{$font-path}lineto-circular-medium.eot?#iefix\") format(\"embedded-opentype\"),\n       url(\"#{$font-path}lineto-circular-medium.woff2\") format(\"woff2\"),\n       url(\"#{$font-path}lineto-circular-medium.woff\") format(\"woff\");\n  font-weight: 600;\n  font-style: normal;\n} */\n\n@font-face {\n  font-family: 'Lausanne';\n  src: url(\"#{$font-path}Lausanne-300.otf\") format(\"opentype\");\n  font-weight: 300;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: 'Lausanne';\n  src: url(\"#{$font-path}Lausanne-500.otf\") format(\"opentype\");\n  font-weight: 500;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: 'Apercu Trial';\n  src: url(\"#{$font-path}value-serif-bold-trial.otf\")\n  format(\"opentype\");\n}\n\n// TYPE-FACE SETTINGS\n$type-face-serif: 'Apercu Trial', serif !default;\n$type-face: 'Lausanne', sans-serif !default;\n$font-weight: 300 !default;\n$font-weight-bold: 500 !default;\n\n// FONT-SIZE SETTINGS\n$font-settings-body: (\n  null: (1.3rem, 1.7rem),\n  lg: (2rem, 2.6rem),\n) !default;\n\n$font-settings-h1: (\n  null: (5rem, 1.1),\n  lg: (5rem, 1.1)\n) !default;\n\n$font-settings-h2: (\n  null: (2.0rem, 2.2rem),\n  lg: (5.0rem, 5.4rem)\n) !default;\n\n$font-settings-h3: (\n  null: (2.5rem, 1.54),\n  lg: (2.5rem, 1.54)\n) !default;\n\n$font-settings-header: (\n  null: (2.6rem, 2.8),\n  sm: (1.8rem, 2)\n) !default;\n\n$font-settings-pre-title: (\n  null: (1.4rem, 1.8rem),\n  xl: (2.6rem, 3.0rem)\n) !default;\n\n$font-settings-filter: (\n  null: (2.6rem, 1.2),\n  xl: (6rem, 1.4)\n) !default;\n\n$font-settings-tiles-title: (\n  null: (1.4rem, 1.6rem),\n  xl: (3.0rem, 3.2rem)\n) !default;\n\n$font-settings-footer: (\n  null: (1.4rem, 1.6rem),\n  lg: (2.0rem, 2.6rem)\n) !default;\n\n$font-settings-categories-post: (\n  null: (1.2rem, 1.4rem),\n  lg: (2.6rem, 3.0rem)\n) !default;\n\n$font-settings-lead: (\n  null: (1.3rem, 1.7rem),\n  lg: (2.0rem, 2.6rem)\n) !default;\n\n$font-settings-image-text: (\n  null: (1.3rem, 1.7rem),\n  lg: (2.0rem, 2.6rem)\n) !default;\n\n$font-settings-image-text-cat: (\n  null: (1.2rem, 2.0rem),\n  lg: (1.5rem, 2.0rem)\n) !default;\n\n$font-settings-infotext: ( \n  null: (1.0rem, 1.4rem),\n  lg: (1.6rem, 1.8rem) \n) !default;","html {\n  font-size: 62.5%;\n  width: 100%;\n}\n\nbody {\n  @include type-face($type-face, $font-weight);\n  @include font-size($font-settings-body);\n  color: $color-main-text;\n  background-color: $color-primary;\n  overflow-x: hidden;\n  padding-top: 45px;\n}\n\n*, *:before, *:after {\n  box-sizing: border-box;\n}\n\nh1,\nh2,\nh3 {\n  @include type-face($type-face, $font-weight);\n}\n\nh1 {\n  @include font-size($font-settings-h1);\n}\n\nh2 {\n  @include font-size($font-settings-h2);\n}\n\nh3 {\n  @include font-size($font-settings-h3);\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n  display: block;\n\n  &.lazy {\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.4s ease;\n  }\n\n  &.loaded {\n    opacity: 1;\n    visibility: visible;\n  }\n}\n\na {\n  text-decoration: underline;\n  cursor: pointer;\n  color: $color-main-text;\n\n  &:hover,\n  &:focus{\n    color: $color-main-text;\n    text-decoration: none;\n  }\n}\n\nli{\n  list-style: none;\n}\n\n.screen-reader-text {\n  border: 0;\n  clip: rect(1px, 1px, 1px, 1px);\n  clip-path: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  word-wrap: normal !important;\n}\n\n\n.no-focus {\n  *:focus {\n    outline: 0;\n    box-shadow: none;\n  }\n}\nbutton{\n  border: none;\n  background: none;\n}\nbutton:focus { \n  outline: none; \n}\n\n\n.content{\n  @include full-width();\n}\n\n.grid-container{\n  @include make-grid-container();\n}\n\n.grid-offset-container{\n  @include make-offset-grid-container();\n}\n\n.grid-half{\n  @include make-grid-item($col-span-content, $margin-bottom: 0);\n  \n  @include sm-max(){\n    @include make-grid-item($col-count);\n  }\n}\n\n.mobile-only{\n  display: none;\n  @include sm-max(){\n    display: block;\n  }\n}\n","/*\n  Usage:\n  @include type-face(typeface, font-weight, font-style);\n*/\n@mixin type-face($type-face: $type-face-body, $font-weight: $font-weight-regular, $font-style: normal) {\n  font-family: $type-face;\n  font-weight: $font-weight;\n  font-style: $font-style;\n  font-smoothing: antialiased;\n  font-smoothing: grayscale;\n}","/*\n  Usage:\n  @include font-size(font-settings-variable);\n*/\n@mixin font-size($fs-map: $font-settings-body, $fs-breakpoints: $layout-breakpoints) {\n  @each $fs-breakpoint, $fs-font-size in $fs-map {\n    @if $fs-breakpoint == null {\n      @include make-font-size($fs-font-size);\n    } @else if $fs-breakpoint == print {\n      @media print {\n        @include make-font-size($fs-font-size);\n      }\n    }\n    @else {\n      // If $fs-font-size is a key that exists in\n      // $fs-breakpoints, use the value\n      @if map-has-key($fs-breakpoints, $fs-breakpoint) {\n        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);\n      }\n      @media screen and (min-width: $fs-breakpoint) {\n        @include make-font-size($fs-font-size);\n      }\n    }\n  }\n}\n\n/*\n  HELPER MIXINS (do not use)\n*/\n@mixin make-font-size($fs-font-size) {\n  // If $fs-font-size is a list, include\n  // both font-size and line-height\n  @if type-of($fs-font-size) == \"list\" {\n    font-size: nth($fs-font-size, 1);\n    @if (length($fs-font-size) > 1) {\n      line-height: nth($fs-font-size, 2);\n    }\n  }\n  @else {\n    font-size: $fs-font-size;\n  }\n}","/* @font-face {\n  font-family:\"Circular Std\";\n  src: url(\"../fonts/lineto-circular-medium.eot\");\n  src: url(\"../fonts/lineto-circular-medium.eot?#iefix\") format(\"embedded-opentype\"),\n       url(\"../fonts/lineto-circular-medium.woff2\") format(\"woff2\"),\n       url(\"../fonts/lineto-circular-medium.woff\") format(\"woff\");\n  font-weight: 600;\n  font-style: normal;\n} */\n@font-face {\n  font-family: 'Lausanne';\n  src: url(\"../fonts/Lausanne-300.otf\") format(\"opentype\");\n  font-weight: 300;\n  font-style: normal; }\n\n@font-face {\n  font-family: 'Lausanne';\n  src: url(\"../fonts/Lausanne-500.otf\") format(\"opentype\");\n  font-weight: 500;\n  font-style: normal; }\n\n@font-face {\n  font-family: 'Apercu Trial';\n  src: url(\"../fonts/value-serif-bold-trial.otf\") format(\"opentype\"); }\n\n/*\n  The higher in list, the higher the z-index\n  Usage: z-index: z('overlay')\n  More information: https://engageinteractive.co.uk/blog/top-10-scss-mixins#z-index\n*/\n/*\n  HELPER MIXINS (do not use)\n*/\n/*\n  Usage:\n  @include xs-min() {\n\n  }\n*/\n/*\n  Usage:\n  @include sm-min() {\n\n  }\n*/\n/*\n  Usage:\n  @include md-min() {\n\n  }\n*/\n/*\n  Usage:\n  @include lg-min() {\n\n  }\n*/\n/*\n  Usage:\n  @include lg-min() {\n\n  }\n*/\n/*\n  Usage:\n  @include xs-max() {\n\n  }\n*/\n/*\n  Usage:\n  @include sm-max() {\n\n  }\n*/\n/*\n  Usage:\n  @include md-max() {\n\n  }\n*/\n/*\n  Usage:\n  @include lg-max() {\n\n  }\n*/\n/*\n  Usage:\n  @include between(sm, md) {\n\n  }\n*/\n/*\n  HELPER MIXINS (do not use)\n*/\n/*\n * Helper Mixin for Layout Mixins to have one movile breakpoint\n */\n/*\n  Usage:\n  @include font-size(font-settings-variable);\n*/\n/*\n  HELPER MIXINS (do not use)\n*/\n/*\n  Usage:\n  Livingdocs component margin-bottom \n*/\n/*\n  Usage:\n  @include spacing(type, spacing-variable);\n*/\n/*\n  Usage:\n  @include spacing-top-bottom(type, spacing-variable);\n*/\n/*\n  Usage:\n  @include spacing-top(type, spacing-variable);\n*/\n/*\n  Usage:\n  @include spacing-bottom(type, spacing-variable);\n*/\n/*\n  Usage:\n  @include spacing-left-right(type, spacing-variable);\n*/\n/*\n  Usage:\n  @include spacing-left(type, spacing-variable);\n*/\n/*\n  Usage:\n  @include spacing-right(type, spacing-variable);\n*/\n/*\n  Usage:\n  @include vertical-align-middle(position, width);\n*/\n/*\n  Usage:\n  @include vertical-align(position);\n*/\n/*\n  Usage:\n  @include type-face(typeface, font-weight, font-style);\n*/\n/*\n  Usage:\n  @include clearfix();\n*/\n/*\n  Usage:\n  @include responsive-ratio(width%, ratiowidth, ratioheight, 'childelement as string');\n*/\n/*\n  Usage:\n  @include size(width unit, height unit);\n*/\n/*\n  Usage:\n  @include make-grid-item(col-span-item); // (on items)\n*/\n/*\n  Usage:\n  @include make-grid-container(); // (on container)\n*/\n/*\n  Usage:\n  @include make-grid-item(col-span-item); // (on items)\n*/\n/*\n  Usage:\n  @include make-grid-container(); // (on container)\n*/\n/*\n  Usage:\n  @include flexbox(direction, wrap, justify-content, align-content);\n*/\nhtml {\n  font-size: 62.5%;\n  width: 100%; }\n\nbody {\n  font-family: \"Lausanne\", sans-serif;\n  font-weight: 300;\n  font-style: normal;\n  font-smoothing: antialiased;\n  font-smoothing: grayscale;\n  font-size: 1.3rem;\n  line-height: 1.7rem;\n  color: #000000;\n  background-color: #D8D8D8;\n  overflow-x: hidden;\n  padding-top: 45px; }\n  @media screen and (min-width: 992px) {\n    body {\n      font-size: 2rem;\n      line-height: 2.6rem; } }\n\n*, *:before, *:after {\n  box-sizing: border-box; }\n\nh1,\nh2,\nh3 {\n  font-family: \"Lausanne\", sans-serif;\n  font-weight: 300;\n  font-style: normal;\n  font-smoothing: antialiased;\n  font-smoothing: grayscale; }\n\nh1 {\n  font-size: 5rem;\n  line-height: 1.1; }\n  @media screen and (min-width: 992px) {\n    h1 {\n      font-size: 5rem;\n      line-height: 1.1; } }\n\nh2 {\n  font-size: 2rem;\n  line-height: 2.2rem; }\n  @media screen and (min-width: 992px) {\n    h2 {\n      font-size: 5rem;\n      line-height: 5.4rem; } }\n\nh3 {\n  font-size: 2.5rem;\n  line-height: 1.54; }\n  @media screen and (min-width: 992px) {\n    h3 {\n      font-size: 2.5rem;\n      line-height: 1.54; } }\n\nimg {\n  max-width: 100%;\n  height: auto;\n  display: block; }\n  img.lazy {\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.4s ease; }\n  img.loaded {\n    opacity: 1;\n    visibility: visible; }\n\na {\n  text-decoration: underline;\n  cursor: pointer;\n  color: #000000; }\n  a:hover, a:focus {\n    color: #000000;\n    text-decoration: none; }\n\nli {\n  list-style: none; }\n\n.screen-reader-text {\n  border: 0;\n  clip: rect(1px, 1px, 1px, 1px);\n  clip-path: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  word-wrap: normal !important; }\n\n.no-focus *:focus {\n  outline: 0;\n  box-shadow: none; }\n\nbutton {\n  border: none;\n  background: none; }\n\nbutton:focus {\n  outline: none; }\n\n.content {\n  width: calc(100% - 30px);\n  margin-left: auto;\n  margin-right: auto; }\n  @media (min-width: 480px) {\n    .content {\n      width: calc(100% - 60px);\n      max-width: 1440px; } }\n\n.grid-container {\n  margin-left: -7.5px;\n  margin-right: -7.5px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start; }\n\n.grid-offset-container {\n  margin-left: -7.5px;\n  margin-right: -7.5px;\n  flex: 0 1 auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start; }\n  @media print {\n    .grid-offset-container {\n      margin-left: 0;\n      margin-right: 0;\n      display: block; } }\n\n.grid-half {\n  width: 50%;\n  margin-bottom: 0;\n  padding-right: 7.5px;\n  padding-left: 7.5px;\n  box-sizing: border-box; }\n  @media (max-width: 768.98px) {\n    .grid-half {\n      width: 100%;\n      margin-bottom: 15px;\n      padding-right: 7.5px;\n      padding-left: 7.5px;\n      box-sizing: border-box; } }\n\n.mobile-only {\n  display: none; }\n  @media (max-width: 768.98px) {\n    .mobile-only {\n      display: block; } }\n\n@keyframes line-1-reverse {\n  0% {\n    transform: rotate(45deg);\n    top: 50%; }\n  70% {\n    top: 50%;\n    transform: rotate(0); }\n  100% {\n    top: 0;\n    transform: rotate(0); } }\n\n@keyframes line-2 {\n  0% {\n    opacity: 1; }\n  100% {\n    opacity: 0; } }\n\n@keyframes line-2-reverse {\n  0% {\n    opacity: 0; }\n  70% {\n    opacity: 1; }\n  100% {\n    opacity: 1; } }\n\n@keyframes line-3 {\n  0% {\n    bottom: 0;\n    transform: rotate(0); }\n  70% {\n    bottom: 50%;\n    transform: rotate(0); }\n  100% {\n    transform: rotate(-45deg);\n    transform-origin: center center;\n    bottom: 50%; } }\n\n@keyframes line-3-reverse {\n  0% {\n    transform: rotate(-45deg);\n    bottom: 50%; }\n  70% {\n    bottom: 50%;\n    transform: rotate(0); }\n  100% {\n    bottom: 0;\n    transform: rotate(0); } }\n\n@keyframes line-1 {\n  0% {\n    top: 0;\n    transform: rotate(0); }\n  70% {\n    top: calc(50% - 2px);\n    transform: rotate(0); }\n  100% {\n    transform: rotate(45deg);\n    top: calc(50% - 2px); } }\n\n.hidden {\n  display: none !important; }\n\n.responsive-embed {\n  position: relative;\n  width: 100%;\n  height: 0;\n  padding: 56.25% 0 0 0;\n  display: block; }\n  .responsive-embed iframe {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%; }\n\n.editor-inner-blocks {\n  width: 100%; }\n\n.block-editor-block-list__layout {\n  padding: 0; }\n\n.wp-block {\n  width: 100%;\n  max-width: 1280px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 0;\n  padding-right: 0; }\n  .wp-block[data-align=\"wide\"] {\n    max-width: calc(100% - 15px * 2);\n    padding: 0 15px; }\n  .wp-block[data-type=\"nhs-blocks/nhs-newsletter\"], .wp-block[data-type=\"acf/nhs-jobs\"], .wp-block[data-align=\"full\"] {\n    max-width: 100%;\n    margin-left: 0 !important;\n    margin-right: 0 !important; }\n\n.block-editor-block-list__layout .block-editor-block-list__block[data-align=\"full\"] {\n  margin-left: 0;\n  margin-right: 0; }\n  .block-editor-block-list__layout .block-editor-block-list__block[data-align=\"full\"] > .block-editor-block-list__block-edit {\n    margin-left: 0;\n    margin-right: 0; }\n\n.block-editor-block-list__block .block-editor-block-list__block-edit,\n.block-editor-block-list__block .block-editor-block-contextual-toolbar {\n  margin-right: 0 !important;\n  margin-left: 0 !important; }\n\n.block-editor__container img {\n  width: 100%; }\n\n.load-more__button,\n.filter__button,\n.nhs-btn,\n.nhs-arrow-btn {\n  background: none;\n  border: none;\n  -webkit-appearance: none;\n  cursor: pointer; }\n\n.story-list .post-list__post,\n.cases-list .post-list__post {\n  display: flex;\n  transform: translateY(0);\n  opacity: 1; }\n\n.employees .employees__employee {\n  display: flex;\n  transform: translateY(0px);\n  opacity: 1; }\n\n.nhs-fancy-btn br {\n  display: none !important; }\n\n.wp-block-image {\n  text-align: center; }\n  .wp-block-image img {\n    display: inline-block; }\n\n.editor-block-list__layout {\n  display: flex; }\n","@mixin full-width(){\n  width: calc(100% - #{$gutter * 2});\n  margin-left: auto;\n  margin-right: auto;\n\n  @include sm-min() {\n    width: calc(100% - #{$gutter * 4});\n    max-width: $max-width-full;\n  }\n}\n\n@mixin content-width(){\n  width: calc(100% - #{$gutter * 2});\n  margin-left: auto;\n  margin-right: auto;\n\n  @include sm-min {\n    width: calc(100% - #{$gutter * 4});\n  }\n\n  @include md-min() {\n    max-width: $max-width-content;\n    width: 80%;\n  }\n}\n\n@mixin screen-width(){\n  width: 100%;\n  max-width: 100%;\n}\n\n@mixin reset-width(){\n  width: 100%;\n  max-width: 100%;\n}\n","/*\n  HELPER MIXINS (do not use)\n*/\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $layout-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $layout-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $layout-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $layout-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n\n/*\n  Usage:\n  @include xs-min() {\n\n  }\n*/\n@mixin xs-min() {\n  @include media-breakpoint-up(xs) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include sm-min() {\n\n  }\n*/\n@mixin sm-min() {\n  @include media-breakpoint-up(sm) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include md-min() {\n\n  }\n*/\n@mixin md-min() {\n  @include media-breakpoint-up(md) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include lg-min() {\n\n  }\n*/\n@mixin lg-min() {\n  @include media-breakpoint-up(lg) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include lg-min() {\n\n  }\n*/\n@mixin xl-min() {\n  @include media-breakpoint-up(xl) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include xs-max() {\n\n  }\n*/\n@mixin xs-max() {\n  @include media-breakpoint-down(xs) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include sm-max() {\n\n  }\n*/\n@mixin sm-max() {\n  @include media-breakpoint-down(sm) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include md-max() {\n\n  }\n*/\n@mixin md-max() {\n  @include media-breakpoint-down(md) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include lg-max() {\n\n  }\n*/\n@mixin lg-max() {\n  @include media-breakpoint-down(lg) {\n    @content;\n  }\n}\n\n/*\n  Usage:\n  @include between(sm, md) {\n\n  }\n*/\n@mixin between($min: null, $max: null) {\n  @include media-breakpoint-between($min, $max) {\n    @content;\n  }\n}\n\n/*\n  HELPER MIXINS (do not use)\n*/\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $layout-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $layout-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $layout-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $layout-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n/*\n * Helper Mixin for Layout Mixins to have one movile breakpoint\n */\n @mixin layout-breakpoint(){\n  @media (min-width: $layout-breakpoint){\n    @content;\n  }\n}\n","// example https: //codepen.io/mynimi/pen/rqLdZZ\n/*\n  Usage:\n  @include make-grid-item(col-span-item); // (on items)\n*/\n@mixin make-grid-item($item-col-spread, $cols-per-row:$col-count, $margin-side:$gutter, $margin-bottom:$margin-side) {\n  width: 100% / $cols-per-row * $item-col-spread;\n  margin-bottom: $margin-bottom;\n  padding-right: $margin-side / 2;\n  padding-left: $margin-side / 2;\n  box-sizing: border-box;\n}\n\n/*\n  Usage:\n  @include make-grid-container(); // (on container)\n*/\n@mixin make-grid-container($grid-gutter: $gutter, $direction: row, $wrap: wrap, $justify-content: flex-start, $align-content: flex-start) {\n  margin-left: ($grid-gutter / 2)*-1;\n  margin-right: ($grid-gutter / 2)*-1;\n  @include flexbox($direction, $wrap, $justify-content, $align-content);\n}\n","/*\n  Usage:\n  @include flexbox(direction, wrap, justify-content, align-content);\n*/\n@mixin flexbox($direction: row, $wrap: wrap, $justify-content: flex-start, $align-content: flex-start) {\n  display: flex;\n  flex-direction: $direction;\n  flex-wrap: $wrap;\n  justify-content: $justify-content;\n  align-items: $align-content;\n}\n","// example https: //codepen.io/mynimi/pen/rqLdZZ\n/*\n  Usage:\n  @include make-grid-item(col-span-item); // (on items)\n*/\n@mixin make-offset-grid-item($item-col-spread, $offset: 0, $margin-left:0, $margin-right: $margin-left, $cols-per-row:$col-count, $make-full-width: true, $margin-fix: false, $margin-fix-size: $gutter) {\n  $width: 100% / $cols-per-row * $item-col-spread;\n  $m-left: 100% / $cols-per-row * $offset;\n  padding-right: $margin-right;\n  padding-left: $margin-left;\n  box-sizing: border-box;\n  flex: 0 0 auto;\n\n  @if($margin-fix){\n    flex-basis: calc(#{$width} + #{$margin-fix-size * 2});\n    max-width: calc(#{$width} + #{$margin-fix-size * 2});\n  } @else {\n    flex-basis: $width;\n    max-width: $width;\n  }\n  @if($margin-fix){\n    margin-left: calc(#{$m-left} - #{$margin-fix-size});\n  } @else {\n    margin-left: $m-left;\n  }\n  @if($make-full-width){\n    @if($margin-fix){\n      $mf: 100% - ($width) - ($m-left);\n      margin-right: calc(#{$mf} + #{$margin-fix-size});\n    } @else {\n      margin-right: 100% - ($width) - ($m-left);\n    }\n  }\n}\n\n/*\n  Usage:\n  @include make-grid-container(); // (on container)\n*/\n@mixin make-offset-grid-container($grid-gutter: $gutter, $direction: row, $wrap: wrap, $justify-content: flex-start, $align-content: flex-start) {\n  margin-left: ($grid-gutter / 2)*-1;\n  margin-right: ($grid-gutter / 2)*-1;\n  flex: 0 1 auto;\n  @include flexbox($direction, $wrap, $justify-content, $align-content);\n\n  @media print {\n    margin-left: 0;\n    margin-right: 0;\n    display: block;\n  }\n}\n","@keyframes line-1-reverse {\n    0% {\n      transform: rotate(45deg);\n      top: 50%;\n    }\n    70% {\n      top: 50%;\n      transform: rotate(0);\n    }\n    100% {\n      top: 0;\n      transform: rotate(0);\n    }\n  }\n  \n  @keyframes line-2 {\n    0% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n  \n  @keyframes line-2-reverse {\n    0% {\n      opacity: 0;\n    }\n    70% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  \n  @keyframes line-3 {\n    0% {\n      bottom: 0;\n      transform: rotate(0);\n    }\n    70% {\n      bottom: 50%;\n      transform: rotate(0);\n    }\n    100% {\n      transform: rotate(-45deg);\n      transform-origin: center center;\n      bottom: 50%;\n    }\n  }\n  \n  @keyframes line-3-reverse {\n    0% {\n      transform: rotate(-45deg);\n      bottom: 50%;\n    }\n    70% {\n      bottom: 50%;\n      transform: rotate(0);\n    }\n    100% {\n      bottom: 0;\n      transform: rotate(0);\n    }\n  }\n  \n  @keyframes line-1 {\n    0% {\n      top: 0;\n      transform: rotate(0);\n    }\n    70% {\n      top: calc(50% - 2px);\n      transform: rotate(0);\n    }\n    100% {\n      transform: rotate(45deg);\n      top: calc(50% - 2px);\n    }\n  }",".hidden {\n  display: none !important;\n}\n",".responsive-embed {\n  @include responsive-ratio();\n}","/*\n  Usage:\n  @include responsive-ratio(width%, ratiowidth, ratioheight, 'childelement as string');\n*/\n@mixin responsive-ratio($cw: 100%, $rw: 16, $rh: 9, $c: 'iframe') {\n  position: relative;\n  width: $cw;\n  height: 0;\n  padding: (($rh / $rw) * $cw) 0 0 0;\n  display: block;\n\n  @if $c != null {\n    #{$c} {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      width: 100%; \n      height: 100%;\n    }\n  }\n}\n",".editor-inner-blocks { \n  width: 100%;\n}\n\n.block-editor-block-list__layout {\n  padding: 0;\n}\n\n.wp-block {\n  width: 100%;\n  max-width: $max-width-content;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 0;\n  padding-right: 0;\n\n  &[data-align=\"wide\"] {\n    max-width: calc(100% - #{$gutter} * 2);\n    padding: 0 $gutter;\n  }\n\n  &[data-type=\"nhs-blocks/nhs-newsletter\"],\n  &[data-type=\"acf/nhs-jobs\"],\n  &[data-align=\"full\"] {\n    max-width: 100%;\n    margin-left: 0 !important;\n    margin-right: 0 !important;\n  }\n}\n\n.block-editor-block-list__layout .block-editor-block-list__block[data-align=\"full\"] {\n  margin-left: 0;\n  margin-right: 0;\n\n  > .block-editor-block-list__block-edit {\n    margin-left: 0;\n    margin-right: 0;\n  }\n}\n\n.block-editor-block-list__block .block-editor-block-list__block-edit,\n.block-editor-block-list__block .block-editor-block-contextual-toolbar {\n  margin-right: 0 !important;\n  margin-left: 0 !important;\n}\n\n.block-editor__container img{\n  width: 100%;\n}\n",".load-more__button,\n.filter__button,\n.nhs-btn,\n.nhs-arrow-btn{\n  background: none;\n  border: none;\n  -webkit-appearance: none;\n  cursor: pointer;\n}\n\n.post-list__post {\n  .story-list &,\n  .cases-list & { \n    display: flex;\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n.employees__employee {\n  .employees & { \n    display: flex;\n    transform: translateY(0px);\n    opacity: 1;\n  }\n}\n\n.nhs-fancy-btn {\n  br {\n    display: none !important;\n  }\n}\n\n.wp-block-image {\n  text-align: center;\n\n  img {\n    display: inline-block;\n  }\n}\n\n.editor-block-list__layout{\n  display: flex;\n}\n"]}